&.lineup {
  display: flex;
  flex-direction: row;
  height: 100%;

  .lu-row,
  .le-tr {
    line-height: 1;
  }

  // Select only first div containing the `lineup-engine`.
  // Do not select the `div.lu-backdrop` element,
  // which is moved one level up in the DOM tree in ARankingView.ts
  > div:first-of-type {
    flex: 1 1 auto;
    position: relative;
  }

  &.overview-detail {
    > div:first-child() {
      display: flex;
      flex-direction: column;

      > header {
        flex: 0 0 auto;
      }

      > div {
        flex: 1 1 auto;
        position: relative;
      }
    }

    header.overview {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      overflow: auto;
    }
  }
}

.lu-dialog {
  label: {
    margin: 0;
  }

  &.lu-filter-table > div:first-of-type > * {
    flex: 0 0 auto;
  }
}

.lu-collapser {
  display: none;
}

.lineup-engine {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: auto;

  > header {
    padding-bottom: 1px; // no idea otherwise scrollbar
  }

  footer:not(.lu-resize-helper) {
    display: block !important;
  }
}

$lu_assets: "~lineupjs/src/assets";

@at-root {
  .tdp-ranking-export-form {
    user-select: none;
    -moz-user-select: none;

    .radio {
      margin-left: 1em;

      &[data-num-rows="0"] {
        display: none;
      }
    }

    [class^="error-"] {
      display: none;
    }

    .has-error {
      [class^="error-"] {
        display: block;
        color: #a94442;
      }
    }

    .text-info {
      color: #777777;
    }
  }

  .tdp-ranking-export-form-handle {
    display: flex;
    align-items: center;
    gap: 0.4em;
    padding: 0.2em 0;

    > i {
      visibility: hidden;
      cursor: grab;
      color: #777777;
    }

    &:hover > i,
    &.dragging > i {
      visibility: visible;
    }

    &.dragging {
      background-color: $core_colour;
      cursor: grabbing;
    }
  }

  .lu-side-panel {
    width: 100%;
    height: 100%;
  }

  .lu-side-panel > main > section::before {
    content: "Column Summaries";
  }

  .lu-hierarchy {
    footer.lu-hierarchy-adder {
      // the phovea_clue selector `body[data-clue='E'] footer` hides this footer
      // so we must override it and display it explicitly
      display: flex;
    }

    .lu-search::before {
      height: 19px;
    }
  }

  .custom-vis-panel {
    display: none;
    width: 70%;
    flex-direction: column;
  }

  .lu-side-panel-wrapper {
    display: flex;
    flex-direction: column;

    &:not(.lu-side-panel-top) {
      border-left: 1px solid $secondary;
    }

    &:not(.collapsed),
    &.lu-side-panel-top {
      > header {
        .panel-toolbar {
          display: flex;

          [class*="btn-"] {
            margin-left: 0.4rem;
          }

          &:not(:first-child):not(.shortcut-toolbar) {
            border-left: 1px solid #dee2e6;
            margin-left: 0.4rem;
          }
        }
      }
    }

    & > header {
      .lu-adder {
        button {
          display: none;
        }
      }
    }
    &:not(.collapsed) {
      .shortcut-nav {
        display: none; // hide navTab that doesn't have class `shortcut-nav` in collapsed mode
      }
    }

    .lu-side-panel > main > section > div {
      flex: 1;
    }

    aside {
      border-left: 0;
    }

    > header {
      margin-left: 0.2em;
      display: flex;
      flex-wrap: wrap;
      margin-bottom: 0.5em;

      // hide caret icon of drop down
      .dropdown-toggle::after {
        content: none;
      }

      .lu-adder {
        display: none;
      }
    }

    label,
    input {
      font-weight: normal;
      margin: 0;
    }

    &.collapsed .collapse-button {
      & > i:before {
        content: fa-content($fa-var-arrow-left);
      }
    }

    button[data-violation] {
      position: relative;
      @extend .btn-text-warning;

      &:hover {
        z-index: 2;
      }

      & > i::before {
        content: fa-content($fa-var-exclamation-triangle);
      }

      &::after {
        content: attr(data-violation);
        color: black;
        text-align: left;
        background: tint-color(#ffd700, 45%);
        hyphens: manual;
        padding: 5px;
        width: 12em;
        position: absolute;
        right: 110%;
        top: 0;
        z-index: 100;
        pointer-events: none;
        opacity: 0;
        display: none;
        transition: visibility 0s ease 0.3s, opacity 0.3s ease 0s;
      }

      &:hover::after {
        opacity: 1;
        display: block;
        transition-delay: 0s, 0.3s;
      }
    }

    @mixin num_rows_indicator($attr_name) {
      // show the number of selected rows after the link element
      a[#{$attr_name}]::after {
        content: " (" attr(#{$attr_name}) ")";
        display: inline;
      }

      // hide the link, if the number of rows is '0'
      a[#{$attr_name}="0"] {
        display: none;
      }
    }

    .save-named-set-dropdown {
      @include num_rows_indicator("data-num-all-rows");
      @include num_rows_indicator("data-num-selected-rows");
      @include num_rows_indicator("data-num-filtered-rows");
    }

    .download-data-dropdown {
      @include num_rows_indicator("data-num-all-rows");
      @include num_rows_indicator("data-num-selected-rows");
      @include num_rows_indicator("data-num-filtered-rows");
    }

    > main {
      display: flex;
      flex-direction: column;
      flex: 1;

      ul.nav-tabs {
        display: flex;

        & > li {
          &:only-child() {
            border: 1px solid white; // overlay the parent element's border
            width: 100%;

            & > a {
              display: none;
            }
          }

          > a {
            color: black;
            padding: 5px 8.5px;
            cursor: pointer;
            text-align-last: center;
            display: flex;
            align-items: center;
            text-align-last: auto;

            & > i {
              align-self: flex-start;
            }
          }
        }
      }

      .tab-content {
        position: relative;
        margin-top: 0.5em;
        display: flex;
        flex-direction: column;
        flex: 1;
      }

      .tab-pane {
        position: absolute;
        top: 0;
        bottom: 0;
        right: 0;
        left: 0;
        overflow: auto;

        &.active {
          display: flex;
          flex-direction: column;
        }

        // Add scrollbar to SidePanel higher in the node tree
        .lu-side-panel-main {
          overflow-y: auto;
          overflow-x: hidden;

          .lu-side-panel-ranking-main {
            overflow: visible;
          }
        }
      }
    }

    &.collapsed {
      max-width: 3em;
      min-width: 0;
      display: flex;
      flex-direction: column;
      overflow: visible;

      &:not(.lu-side-panel-top) {
        & > header {
          .panel-toolbar {
            display: flex;
            flex-direction: column;
            [class*="btn-"] {
              margin-top: 0.4rem;
            }

            &:not(:first-child) {
              border-top: 1px solid #dee2e6;
              margin-top: 0.4rem;
            }
          }
        }
      }

      > header {
        // Add margin before the first shortcut-nav

        > button:not(.shortcut-nav) + .shortcut-nav {
          margin-top: 1em;
        }

        margin-right: 0;
        min-width: 0;
        align-self: flex-start;
        max-width: 100%;
        flex-direction: column;

        display: flex;
        flex-direction: column;
      }

      > main {
        display: none;
      }

      .lu-adder {
        padding: 0;
        display: flex;
        flex-direction: column;
        position: relative;
        border: none;

        &:not(.once) .lu-search {
          display: none;
        }

        button {
          display: block;
          z-index: 1;
        }

        &.once::before {
          content: "";
          top: -30px;
          left: -20em;
          right: 0;
          bottom: -50vh;
          position: absolute;
          z-index: 0;
        }

        &.once .lu-search {
          position: absolute;
          top: 2.4em;
          width: 17.5em;
          left: -15.1em;
          z-index: 2;

          > ul {
            max-height: 50vh;
          }
        }
      }

      .gap {
        margin-top: 1em;
      }
    }
  }

  .lu-side-panel-top-form {
    display: flex;

    p {
      flex: 1 1 0;
    }
  }

  .lu-side-panel-top.lu-side-panel-wrapper.collapsed {
    display: inline-flex;
    flex-direction: row;
    max-width: unset;
    width: unset;
    float: right;
    border-left: none;

    > header {
      display: flex;
      flex-direction: row;
      max-width: unset;
      margin-bottom: 0;
    }

    div.lu-adder {
      margin-top: 0;

      &.once .lu-search {
        left: -1.2em;
      }

      &.once::before {
        content: "";
        top: -10px;
        left: -2.5em;
        right: -15em;
        bottom: -3em;
        position: absolute;
      }
    }
  }
}
